리눅스 OS는 프로세스, 쓰레드로 구성되어 있다. 
쓰레드는 같은 부모 프로세스를 가지고 있으면 메모리 공간을 공유하지만 정적변수의 공간은 공유하지 않는다. 
쓰레드는 동적변수를 동시에 접근할 수 있으므로 임계영역에 대한 LOCK을 설정 해야하고, 쓰레드의 실행 순서는 CPU의 스케줄러에 따라 결정된다. 
부모 프로세스가 종료될 시 부모 프로세스로 부터 만들어진 프로세스나 쓰레드는 모두 종료 된다. 

프로세스는 자신만의 가상메모리를 가지고 있고 그중 1G는 리눅스 커널의 메모리 이다. 모든 프로세스가 리눅스 커널 메모리를 가지고 있다고 볼수 있고, 모든 커널 메모리는 하나의 커널로 이루어져 있다.
가상 메모리는 페이지 테이블을 통하여 물리 메모리에 접근하고 부모 프로세스가 같은 쓰레드들은 이 페이지 테이블을 공유한다. 하지만 다른 프로세스의 경우 페이지 테이블을 다시 CPU로 업로드 해야 하므로
많은 오버헤드가 발생한다. 그래서 현재에는 멀티 쓰레드로 개발하고 있으며, 보안이 중요한 웹(크롬)의 경우 새로운 창을 만들 때 쓰레드가 아닌 프로세스를 만든다.

임계영역은 여러 쓰레드가 접근할 경우 연산이 atomic하게 이루어 지지 않기 때문에 연산이 여러번 실행 되어도 결과값은 한번 연산된 값일 수 있다. C 언어가 어셈블리 언어로 바뀌면서 한개의 연산이 여러개의
어셈블리 언어로 변하면서 한 쓰레드가 연산 실행중 다른 쓰레드가 접근하면 한번의 연산이 중첩되기 때문에 원하는 결과값이 안나 올 수 있다. 

